"""
Given a string S and a pattern P, you need to find if S can be generated by using P one or more times.

Input:
For each testcase, first line of input contains number of testcases T. For each testcase, there will be two lines of input, first of which contains the pattern P and the next line contains string S.

Output:
For each testcase, print "1"(without quotes), if possible, else print "0"(without quotes).

Constraints:
1 <= T <= 100
a <= S[i] <= z

Example:
Input:
2
abba
abbaabb
abba
abba

Output:
0
1

Explanation:
Testcase 1: No matter how many times we repeat the pattern abba, we won't get the given String S.
Testcase 2: Repeat the pattern 1 time, we get the given string.
"""


def can_pattern_match(p, s):

    if len(s) % len(p) > 0:
        return False

    return p * (int(len(s) / len(p))) == s


if __name__ == '__main__':

    test_cases = int(input())

    for i in range(test_cases):
        pattern = input()
        string_s = input()
        print('1' if can_pattern_match(pattern, string_s) else '0')
